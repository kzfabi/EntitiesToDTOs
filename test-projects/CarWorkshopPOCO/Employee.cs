//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CarWorkshopPOCO
{
    public partial class Employee
    {
        #region Primitive Properties
    
        public virtual int EmployeeID
        {
            get;
            set;
        }
    
        public virtual string FirstName
        {
            get;
            set;
        }
    
        public virtual string LastName
        {
            get;
            set;
        }
    
        public virtual double Salary
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Birthdate
        {
            get;
            set;
        }
    
        public virtual string Event
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual EmployeeType EmployeeType
        {
            get { return _employeeType; }
            set
            {
                if (!ReferenceEquals(_employeeType, value))
                {
                    var previousValue = _employeeType;
                    _employeeType = value;
                    FixupEmployeeType(previousValue);
                }
            }
        }
        private EmployeeType _employeeType;
    
        public virtual ICollection<Vehicle> Vehicles
        {
            get
            {
                if (_vehicles == null)
                {
                    var newCollection = new FixupCollection<Vehicle>();
                    newCollection.CollectionChanged += FixupVehicles;
                    _vehicles = newCollection;
                }
                return _vehicles;
            }
            set
            {
                if (!ReferenceEquals(_vehicles, value))
                {
                    var previousValue = _vehicles as FixupCollection<Vehicle>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupVehicles;
                    }
                    _vehicles = value;
                    var newValue = value as FixupCollection<Vehicle>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupVehicles;
                    }
                }
            }
        }
        private ICollection<Vehicle> _vehicles;

        #endregion

        #region Association Fixup
    
        private void FixupEmployeeType(EmployeeType previousValue)
        {
            if (previousValue != null && previousValue.Employees.Contains(this))
            {
                previousValue.Employees.Remove(this);
            }
    
            if (EmployeeType != null)
            {
                if (!EmployeeType.Employees.Contains(this))
                {
                    EmployeeType.Employees.Add(this);
                }
            }
        }
    
        private void FixupVehicles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Vehicle item in e.NewItems)
                {
                    item.Employee = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Vehicle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Employee, this))
                    {
                        item.Employee = null;
                    }
                }
            }
        }

        #endregion

    }
}
