//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace CarWorkshopPOCOWCF
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(EmployeeType))]
    public partial class Employee
    {
        #region Primitive Properties
        [DataMember]
        public virtual int EmployeeID
        {
            get;
            set;
        }
        [DataMember]
        public virtual string FirstName
        {
            get;
            set;
        }
        [DataMember]
        public virtual string LastName
        {
            get;
            set;
        }
        [DataMember]
        public virtual double Salary
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> Birthdate
        {
            get;
            set;
        }
        [DataMember]
        public virtual string Event
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
        
    
        [DataMember]
        public virtual EmployeeType EmployeeType
        {
            get { return _employeeType; }
            set
            {
                if (!ReferenceEquals(_employeeType, value))
                {
                    var previousValue = _employeeType;
                    _employeeType = value;
                    FixupEmployeeType(previousValue);
                }
            }
        }
        private EmployeeType _employeeType;

        #endregion
        #region Association Fixup
    
        private void FixupEmployeeType(EmployeeType previousValue)
        {
            if (previousValue != null && previousValue.Employees.Contains(this))
            {
                previousValue.Employees.Remove(this);
            }
    
            if (EmployeeType != null)
            {
                if (!EmployeeType.Employees.Contains(this))
                {
                    EmployeeType.Employees.Add(this);
                }
            }
        }

        #endregion
    }
}
